{"version":3,"file":"static/js/617.8c04755a.chunk.js","mappings":"wNAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,WAAOC,EAAKC,GAAZ,uFACAH,EAAAA,EAAAA,IAAA,UACjBE,EADiB,oBAJF,oCAIE,cACQC,QADR,IACQA,EAAAA,EAAQ,KAFhB,cACjBC,EADiB,yBAGhBA,EAASD,MAHO,2CAAH,uD,gECctB,IAfgB,kBACd,SAAC,KAAD,WACE,SAAC,KAAD,CACEE,OAAQ,IACRC,MAAO,IACPC,MAAM,UACNC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAVZ,C,wMC8BhB,EA9BmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OAAsB,IAAlBF,EAAOG,QACF,uBAAG,0CAIV,SAAC,KAAD,UACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eAAgBC,EAApC,EAAoCA,MAApC,OACV,yBACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAA1C,WACE,SAAC,KAAD,CACEW,IACEN,GAAW,yCACuBA,GAEpCO,IAAKN,EACLd,MAAM,QAEPe,GAASA,EAAMM,aAXbT,EADC,KAmBjB,E,UCcD,EArCa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAGRC,YAAU,iBAAC,gHAEmBhC,EAAAA,EAAAA,GAJlB,uBAED,gBAECiC,EAFD,EAECA,QACRL,GAAU,OAAIK,IAHP,gDAKPC,QAAQC,MAAR,MACAC,EAAAA,GAAAA,MAAY,qBANL,yBAQPN,GAAW,GARJ,4EAUR,IACJ,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,UAAW,2BACX,SAAC,KAAD,WACE,SAAC,MAAD,CAAgBO,MAAO,CAAEhC,MAAO,OAAQD,OAAQ,YAEjDyB,GACC,SAACS,EAAA,EAAD,KAEA,yBACE,SAAC,EAAD,CAAY1B,OAAQA,OAGxB,oBAGL,C,6OC1CY2B,EAAWC,EAAAA,GAAAA,IAAH,2IAQRC,EAAWD,EAAAA,GAAAA,IAAH,2KASRE,EAAaF,EAAAA,GAAAA,IAAH,+LAUVG,EAAYH,EAAAA,GAAAA,GAAH,oGAOTI,EAAgBJ,EAAAA,GAAAA,KAAH,iDAIbK,EAAgBL,EAAAA,GAAAA,KAAH,gFAMbM,EAAiBN,EAAAA,GAAAA,GAAH,0I","sources":["components/API.js","components/Spinner.js","components/MoviesList.jsx","pages/Home.js","styles/MoviesList.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '4b344883b82fcf079d9187a8a7651085';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchData = async (way, data) => {\n  const response = await axios.get\n    (`${way}?api_key=${API_KEY}${data ?? ''}`);\n  return response.data;\n};\n\n\n\n","import React from 'react';\nimport { Oval } from 'react-loader-spinner';\nimport { SpinnerWraper } from 'styles/AppLayout.styled';\n\nconst Spinner = () => (\n  <SpinnerWraper>\n    <Oval\n      height={100}\n      width={100}\n      color=\"#cacbeb\"\n      visible={true}\n      ariaLabel='oval-loading'\n      secondaryColor=\"#a6a9f5\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  </SpinnerWraper>\n);\n\nexport default Spinner;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { FilmCard, FilmList, FilmPoster } from '../styles/MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  if (movies.length === 0) {\n    return <p>The list of popular films is missing</p>;\n  }\n\n  return (\n    <FilmList>\n      {movies.map(({ id, poster_path, original_title, title }) => (\n        <li key={id}>\n          <FilmCard>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <FilmPoster\n                src={\n                  poster_path &&\n                  `https://image.tmdb.org/t/p/w500${poster_path}`\n                }\n                alt={original_title}\n                width=\"150\"\n              />\n              {title && title.trim()} \n            </Link>\n          </FilmCard>\n        </li>\n      ))}\n    </FilmList>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { FcClapperboard } from \"react-icons/fc\";\n\nimport { fetchData } from '../components/API';\nimport MoviesList from 'components/MoviesList';\nimport { TitleFilm, IconContainer, MainContainer } from 'styles/MoviesList.styled';\nimport Spinner from 'components/Spinner';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const way = '/trending/movie/day';\n    // 'all/day' & 'movie/day' ?\n    setTimeout(async () => {\n      try {\n        const { results } = await fetchData(way);\n        setMovies([...results]);\n      } catch (error) {\n        console.error(error);\n        toast.error('Error fetch data!');\n      } finally {\n        setLoading(false);\n      }\n    }, 300);\n  }, []);\n\n  return (\n    <MainContainer>\n      <TitleFilm>Trending movies today</TitleFilm>\n      <IconContainer>\n        <FcClapperboard style={{ width: '30px', height: '30px' }} />\n      </IconContainer>\n      {loading ? (\n        <Spinner/>\n      ) : (\n        <ul>\n          <MoviesList movies={movies} />\n        </ul>\n      )}\n      <hr/>\n    </MainContainer>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const FilmList = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    column-gap: 26px;\n    row-gap: 16px;\n`;\n\nexport const FilmCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    width: 166px;\n    padding: 6px 6px 10px;\n`;\n\nexport const FilmPoster = styled.img`\n    margin-bottom: 14px;\n    transition: 0.3s ease;\n\n    &:hover {\n        transform: scale(1.09);\n        box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 1);\n    }\n`;\n\nexport const TitleFilm = styled.h2`\n    font-size: 32px;\n    font-weight: 700;\n    margin: 8px 0 12px;\n    \n`;\n\nexport const MainContainer = styled.main`\n    position: relative;\n`;\n\nexport const IconContainer = styled.span`\n    position: absolute;\n    top: 10px;\n    right: 0;\n`;\n\nexport const DetailsWrapper = styled.ul`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    column-gap: 26px;\n    row-gap: 16px;\n`;\n"],"names":["axios","fetchData","way","data","response","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","movies","location","useLocation","length","map","id","poster_path","original_title","title","to","state","from","src","alt","trim","useState","setMovies","loading","setLoading","useEffect","setTimeout","results","console","error","toast","style","Spinner","FilmList","styled","FilmCard","FilmPoster","TitleFilm","MainContainer","IconContainer","DetailsWrapper"],"sourceRoot":""}