{"version":3,"file":"static/js/104.5f7291c3.chunk.js","mappings":"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","sources":["components/API.js","components/Spinner.js","styles/MovieDetails.styled.jsx","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = '4b344883b82fcf079d9187a8a7651085';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchData = async (way, data) => {\n  const response = await axios.get\n    (`${way}?api_key=${API_KEY}${data ?? ''}`);\n  return response.data;\n};\n\n\n\n","import React from 'react';\nimport { Oval } from 'react-loader-spinner';\nimport { SpinnerWraper } from 'styles/AppLayout.styled';\n\nconst Spinner = () => (\n  <SpinnerWraper>\n    <Oval\n      height={100}\n      width={100}\n      color=\"#cacbeb\"\n      visible={true}\n      ariaLabel='oval-loading'\n      secondaryColor=\"#a6a9f5\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  </SpinnerWraper>\n);\n\nexport default Spinner;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonBack = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  border: none;\n  cursor: pointer;\n  background-color: #a6a9f5;\n  transition: all 0.5s ease;\n  font-weight: 600;\n  font-size: 18px;\n  width: 34px;\n\n  &:hover {\n    transform: scale(1.01);\n    background-color: #cacbeb;\n    width: 136px;\n}\n\n  &:hover::before {\n    content: 'back';\n    position: absolute;\n    top: 50%;\n    left: 75%;\n    transform: translate(-50%, -50%);\n    color: #010c1f;\n    opacity: 0;\n    transition: opacity 0.8s ease;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  gap: 40px;\n  background-color: rgba(237, 237, 242, 0.7);\n  color: #010c1f;\n  font-size: 16px;\n`;\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-bottom: 6px;\n`;\n\nexport const DetailsImg = styled.img`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const DetailsTitle = styled.p`\n  font-weight: 600;\n  font-size: 20px;\n  margin-top: 4px;\n  margin-bottom: 2px;\n`;\n\nexport const DetailsLink = styled.a`\n  color: #068572;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 0.4s ease;\n    &:hover {\n    color: #068552;\n}\n`;\n\nexport const SectionAdd = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 22px;\n`;\n\nexport const LinkAdd = styled(Link)`\n  color: #a6a9f5;\n  font-weight: 500;\n  font-size: 22px;\n  transition: all 0.4s ease;\n  margin: 20px 0;\n    &:hover {\n    color: #cacbeb;\n    }\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { toast } from 'react-hot-toast';\nimport { fetchData } from 'components/API';\nimport Spinner from 'components/Spinner';\nimport {\n  ButtonBack,\n  DetailsImg,\n  DetailsTitle,\n  SectionAdd,\n  DetailsWrapper,\n  Section,\n  DetailsLink,\n  LinkAdd,\n} from 'styles/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState(null);\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const wayDetails = `/movie/${movieId}`;\n\n    setTimeout(async () => {\n      try {\n        const movieInfo = await fetchData(wayDetails);\n        setInfo(movieInfo);\n      } catch (error) {\n        console.warn(error);\n        toast.error('Oops! Something went wrong...');\n      }\n    }, 300);\n  }, [movieId]);\n\n  if (info === null) {\n    return <Spinner />;\n  }\n\n  const {\n    title,\n    original_title,\n    poster_path,\n    budget,\n    genres,\n    homepage,\n    release_date,\n    vote_average,\n    overview,\n  } = info;\n\n  const poster = poster_path && `http://image.tmdb.org/t/p/w342${poster_path}`;\n  const release = release_date && release_date.slice(0, 4);\n  const rating = vote_average && Math.round(vote_average * 10);\n  const tags =\n    genres &&\n    genres.map(tag => (\n      <li key={tag.id}>\n        <p>{tag.name}</p>\n      </li>\n    ));\n\n  return (\n    <>\n      {info && (\n        <main>\n          <Link\n            to={backLocationRef.current}\n            style={{ width: '20px', display: 'block' }}\n          >\n            <ButtonBack>\n              <HiArrowLeft\n                style={{\n                  width: '20px',\n                  height: '20px',\n                  color: '#010c1f',\n                  marginRight: 'auto',\n                }}\n              />\n            </ButtonBack>\n          </Link>\n          <Section>\n            <DetailsImg src={poster} alt={original_title} width=\"240\" />\n            <DetailsWrapper>\n              <DetailsTitle>\n                {title} ({release})\n              </DetailsTitle>\n              {budget ? (\n                <p>\n                  The budget($): <b>{budget}</b>\n                </p>\n              ) : null}\n              <p>\n                User Score: <b>{rating}%</b>\n              </p>\n              <DetailsTitle>Overview</DetailsTitle>\n              <p>{overview} </p>\n              <DetailsTitle>Genres</DetailsTitle>\n              <ul>{tags}</ul>\n              {homepage && (\n                <div>\n                  <DetailsTitle>Homepage: </DetailsTitle>\n                  <DetailsLink href={homepage} target=\"_blank\" rel=\"noreferrer\">\n                    {homepage}\n                  </DetailsLink>\n                </div>\n              )}\n            </DetailsWrapper>\n          </Section>\n          <hr />\n          <SectionAdd>\n            <h5>Additional information</h5>\n            <ul>\n              <li>\n                <LinkAdd to={'cast'}>Cast</LinkAdd>\n              </li>\n              <li>\n                <LinkAdd to={'reviews'}>Reviews</LinkAdd>\n              </li>\n            </ul>\n          </SectionAdd>\n          <hr />\n          <Suspense fallback={<Spinner />}>\n            <Outlet />\n          </Suspense>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","fetchData","way","data","response","height","width","color","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ButtonBack","styled","Section","DetailsWrapper","DetailsImg","DetailsTitle","DetailsLink","SectionAdd","LinkAdd","Link","movieId","useParams","useState","info","setInfo","location","useLocation","backLocationRef","useRef","state","from","useEffect","wayDetails","setTimeout","movieInfo","console","warn","toast","Spinner","title","original_title","poster_path","budget","genres","homepage","release_date","vote_average","overview","poster","release","slice","rating","Math","round","tags","map","tag","name","id","to","current","style","display","marginRight","src","alt","href","target","rel","Suspense","fallback"],"sourceRoot":""}